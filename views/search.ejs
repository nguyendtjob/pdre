
<script src="http://code.jquery.com/jquery-2.1.4.min.js"></script>
<script src="https://cdn.datatables.net/v/bs4/dt-1.10.16/b-1.5.1/b-html5-1.5.1/b-print-1.5.1/fh-3.1.3/r-2.2.1/rg-1.0.2/sc-1.4.4/sl-1.2.5/datatables.min.js"></script>
<script src="/js/afnFiltering.js"></script>
<script src="/js/jquery.dataTables.yadcf.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.scrollto/2.1.2/jquery.scrollTo.min.js"></script>


<script>
  //Hide the page while Datatable is treating the information
  document.write('<style>body { visibility: hidden; } </style>');

  //Delay function to display the page
  function delay() {
    setTimeout('initFadeIn()', 0);
  }

  //Turn the page visible
  function initFadeIn() {
    jQuery("body").css("visibility","visible");
    jQuery("body").css("display","none");
    jQuery("body").fadeIn(700);
  }


  //Redraw the table based on the filter value
  function filterColumn (table, i, colid ) {
    $(table).DataTable().column( i ).search(
      $(colid).val()).draw();
  }

  //Create the child row for comments
  function commentRow ( data ) {
    var com = '<i>'+data[9]+'</i>';
    return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;"><tr><td><i>Comment:</i></td><td>'+com+'</td></tr></table>';
  }

  function refRow (data){
    if (data[8] != ''){
      return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;"><tr><td><i>Full reference:</i></td><td>'+data[8]+'</td></tr></table>';
    } else {

    }

  }


  $(document).ready(function(){
    $('#generalTable thead th').each( function() {
      var sTitle;

      if ( $(this).attr('id') == "gene_th" ) {
        sTitle =  'Link to the Gene Card';
      } else if ( $(this).attr('id') == "hla_th" ) {
        sTitle =  'Human leukocyte antigen \nClass II HLA are shown in blue';
      } else if ( $(this).attr('id') == "freq_th" ){
        sTitle =  'Frequency in Caucasians, based on \n(1) Marsh SGE, Parham P, Barber LD. The HLA Factsbook (Academic Press, 2000) for HLA-A, B, C, and DR\n(2) Colombani J. HLA, Fonctions immunitaires et applications m√©dicales (John Libbey Eurotext, 1993) for HLA-DP and DR';
      } else if ( $(this).attr('id') == "seq_th" ){
        sTitle =  'The residues modified by the mutation are indicated in red';
      } else
        sTitle = '';
      this.setAttribute( 'title', sTitle );
    } );


    delay();
    //setting the general table
    var generalTable = $('#generalTable').DataTable({
      "sDom": '<"top"bl>rt<"bottom"ip><"clear">',
      "scrollX": true,
      "orderCellsTop": true,
      scrollY: '65vh',
      paging: false,
      scrollCollapse: true,
      headerOffset: 102,


      "orderFixed": [ 11, 'asc' ],

      "order": [[ 11, "asc" ], [ 0, "asc" ]],
      "columnDefs": [
        {
          "targets":[10],
          "sortable": false
        },

        { "type": "num", "targets": 3 },

        {
          "targets": [ 8,9, 11 ],
          "visible": false,
          "searchable": true
        },
        { "orderData": [ 11, 0 ],    "targets": 0 },
        { "orderData": [ 11, 1 ],    "targets": 1 },
        { "orderData": [ 11, 2 ],    "targets": 2 },
        { "orderData": [ 11, 3 ],    "targets": 3 },
        { "orderData": [ 11, 4 ],    "targets": 4 },
        { "orderData": [ 11, 5 ],    "targets": 5 },
        { "orderData": [ 11, 6 ],    "targets": 6 },
        { "orderData": [ 11, 7 ],    "targets": 7 },
        { "orderData": [ 11, 10 ],    "targets": 10 },

        { "width": "10%", "targets": 0 },
        { "width": "20%", "targets": 1 },
        { "width": "5%", "targets": [2,3,5]},
        { "width": "3%", "targets": 10},
        { "width": "15%", "targets": [4,6] }

      ],

      //Add category class for the row
      "createdRow": function( row, data, dataIndex ) {
        if ( data[11] == 0 ) {
          $(row).addClass( 'mutarion_row' );
        } else if ( data[11] == 1 ) {
          $(row).addClass( 'tumor_row' );
        } else if ( data[11] == 2 ) {
          $(row).addClass( 'diff_row' );
        } else {
          $(row).addClass( 'over_row' );
        }
      },

      //change row color based on the peptide type. Striped style.
      "rowCallback": function( nRow, aData, index ) {
        if ( aData[11] == 0 )
        {
          if (index%2 == 0){
            $('td', nRow).css('background-color', '#FFF4F4');
          }else{
            $('td', nRow).css('background-color', '#FFECEC');
          }
        }
        else if ( aData[11] == 1 )
        {
          if (index%2 == 0){
            $('td', nRow).css('background-color', '#FDFFE9');
          }else{
            $('td', nRow).css('background-color', '#FEF8CB');
          }
        }
        else if ( aData[11] == 2 )
        {
          if (index%2 == 0){
            $('td', nRow).css('background-color', '#F0F8FF');
          }else{
            $('td', nRow).css('background-color', '#DCEEFF');
          }
        }
        else if ( aData[11] == 3 )
        {
          if (index%2 == 0){
            $('td', nRow).css('background-color', '#F7FFE1');
          }else{
            $('td', nRow).css('background-color', '#EAFFD6');
          }
        }
      },

      //Create the category row, done every time the datatable is drawn
      "drawCallback": function () {
        var api = this.api();
        var rows = api.rows( {page:'current'} ).nodes();
        var last= null;
        var colors = ["color:red","color:orange","color:blue","color:green"];
        var group_label = ["1. Mutation","2. Tumor-Specific","3. Differentiation","4. Overexpressed"];

        api.column(11, {page:'current'} ).data().each( function ( group, i ) {
          if ( last !== group) {
            $(rows).eq( i ).before(
              '<tr class="group" id="section'+(group)+'"><td colspan="10"><span style='+colors[group]+'>'+group_label[group]+'</td></tr>'
            );
            last = group;
          }
        });

      }
    });

    //Event listener: comment button
    $('.oi-chevron-bottom').on('click', function () {
      var tr = $(this).closest('tr');
      var row = generalTable.row( tr );

      if ( row.child.isShown() ) {
        // This row is already open - close it
        row.child.hide();
        tr.removeClass('shown');
      }
      else {
        // Open this row
        row.child( commentRow(row.data()) ).show();
        tr.addClass('shown');
      }
    } );

    //Prevents sorting when clicking on the input fields
    $('.filter').on('click', function(e){
      e.stopPropagation();
    });

    //Event listener: any key input in the column filter
    $('input.column_filter').on( 'keyup', function () {
      filterColumn( $('#generalTable'), $(this).attr('data-column'), $(this));
    } );


    //Event listener: redraw the table when there is a range input
    $('#min').keyup( function() {
      generalTable.draw();
    } );

    $('#max').keyup( function() {
      generalTable.draw();
    });


    //Event listener for the navbar buttons
    $(".sectionbtn").click( function() {
      var selection;
      if (this.id == "section0btn"){
        $('.sectionbtn').removeClass("active");
        $('#section0btn').addClass("active");
        selection = $( "#section0" );
      } else if (this.id == "section1btn"){
        $('.sectionbtn').removeClass("active");
        $('#section1btn').addClass("active");
        selection = $( "#section1" );
      } else if (this.id == "section2btn"){
        $('.sectionbtn').removeClass("active");
        $('#section2btn').addClass("active");
        selection = $( "#section2" );
      } else {
        $('.sectionbtn').removeClass("active");
        $('#section3btn').addClass("active");
        selection = $( "#section3" );
      }
      $(".dataTables_scrollBody").scrollTo(selection);
    });

    //Event listener: change category button highlight depending on the ctaegory header position
    $(".dataTables_scrollBody").on('scroll', function() {
      $('.group').each(function(){
        var sectionDistance = $(this).offset().top;
        if (sectionDistance < 550){
          $('.sectionbtn').removeClass("active");
          $('#'+this.id+'btn').addClass("active");
        } else{
          $('#'+this.id+'btn').removeClass("active");
          var previous = this.id - 1 ;
          $('#'+previous+'btn').addClass("active");
        }
      });
    });
  });

</script>

<!-- Category navigation bar -->
<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <div class="collapse navbar-collapse" id="navbar_category">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item">
        <a id="section0btn" class="btn btn-sm btn-outline-danger sectionbtn">Mutation</a>
      </li>
      <li class="nav-item" >
        <a id="section1btn" class="btn btn-sm btn-outline-warning sectionbtn">Tumor Specific</a>
      </li>
      <li class="nav-item">
        <a id="section2btn" class="btn btn-sm btn-outline-primary sectionbtn">Differentiation</a>
      </li>
      <li class="nav-item">
        <a id="section3btn" class="btn btn-sm btn-outline-success sectionbtn">Overexpressed</a>
      </li>
    </ul>
  </div>
</nav>

<!-- Table -->
<div id="main_container" data-spy="scroll" data-target="#navbar-tables" data-offset='50' >
    <table id="generalTable" class="table-bordered" width="100%">
      <thead>
      <tr>
        <th id="gene_th">Gene/Protein<br><input class="filter column_filter gene_filter" type="text" data-column="0" /></th>
        <th id="tumor_th">Tumor<br><input class="filter column_filter tumor_filter" type="text" data-column="1" /></th>
        <th id="hla_th">HLA<br><input class="filter column_filter hla_filter" type="text" data-column="2" /></th>
        <th id="freq_th">HLA %<br><input class="filter column_filter freq_filter" type="text" data-column="3" /></th>
        <th id="seq_th">Peptide Sequence<br><input class="filter column_filter seq_filter" type="text" data-column="4" /><br>Peptide Length: <input class="filter min_range" id="min"> to <input class="filter max_range" id="max"></th>
        <th id="pos_th">Position<br><input class="filter column_filter pos_filter" type="text" data-column="5" /></th>
        <th id="stim_th">Lymphocyte Stimulation Method<br><input class="filter column_filter sim_filter" type="text" data-column="6" /></th>
        <th id="ref_th">Reference<br><input class="filter column_filter ref_filter" type="text" data-column="7" /></th>
        <th>Full Reference</th>
        <th>Comment content</th>
        <th id="com_th">Comment</th>
        <th>Type</th>
      </tr>
      </thead>
      <tbody>
      <% peptides.forEach(function(peptide){ %>
      <tr>
        <td><% if(peptide.geneCard) {%>
          <b><a href="<%= peptide.geneCard %>" target="_blank"><%= peptide.gene%></a></b>
          <% } else {%>
          <i><b><%= peptide.gene %></b></i>
          <% } %>
        </td>
        <td><%= peptide.tumor %></td>
        <% if (peptide.hla.charAt(0) == 'D') {%>
        <td><span style="color:blue"><%= peptide.hla %></span></td>
        <% } else { %>
        <td><%= peptide.hla %></td>
        <% } %>
        <td><%= peptide.freq %></td>
        <td><%= peptide.leftSequence %><span style="color:red"><%= peptide.redPart %></span><%= peptide.rightSequence %></td>
        <td><%= peptide.pos %></td>
        <td><%= peptide.stimulation %></td>
        <td><a href="<%= peptide.url %>" target="_blank"><%= peptide.reference %></a></td>
        <td><%= peptide.fullReference %></td>
        <td><%= peptide.comment %></td>
        <td class="comment-cell"><% if(peptide.comment) {%>
          <span class="btn btn-outline-secondary btn-sm oi oi-chevron-bottom"></span>
          <% } %>
        </td>
        <td>
          <% if (peptide.type == "mutation") { %>
          0
          <% } else if (peptide.type == "tumor") { %>
          1
          <% } else if (peptide.type == "differentiation") { %>
          2
          <% } else if (peptide.type == "overexpressed") { %>
          3
          <% } else { %>
          4
          <% } %>
        </td>
      </tr>
      <% })%>
      </tbody>
    </table>
</div>
